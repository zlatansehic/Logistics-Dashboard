<!DOCTYPE html>
<html lang="sr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Izvoz/Uvoz Tracker - Excel Log</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        
        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .stat-card {
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #3498db;
        }
        
        .controls {
            background: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            align-items: center;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }
        
        .btn-primary {
            background-color: #3498db;
            color: white;
        }
        
        .btn-success {
            background-color: #27ae60;
            color: white;
        }
        
        .btn-warning {
            background-color: #f39c12;
            color: white;
        }
        
        .filter-input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-right: 10px;
        }
        
        .table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th, td {
            padding: 12px 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            font-size: 12px;
        }
        
        th {
            background-color: #34495e;
            color: white;
            font-weight: 600;
            position: sticky;
            top: 0;
        }
        
        tr:hover {
            background-color: #f8f9fa;
        }
        
        .status-nova {
            background-color: #e8f4f8;
            color: #2980b9;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
        }
        
        .status-u-toku {
            background-color: #fef9e7;
            color: #f39c12;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
        }
        
        .status-zavrseno {
            background-color: #d5f4e6;
            color: #27ae60;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
        }
        
        .status-problem {
            background-color: #fadbd8;
            color: #e74c3c;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
        }
        
        .priority-high {
            color: #e74c3c;
            font-weight: bold;
        }
        
        .priority-medium {
            color: #f39c12;
            font-weight: bold;
        }
        
        .priority-normal {
            color: #27ae60;
        }
        
        .editable {
            cursor: pointer;
        }
        
        .editable:hover {
            background-color: #f0f0f0;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        
        .close:hover {
            color: black;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>IZVOZ/UVOZ TRACKER</h1>
        <p>Centralizovani log za praƒáenje svih po≈°iljki</p>
    </div>
    
    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-number" id="totalShipments">12</div>
            <div>Ukupno po≈°iljki</div>
        </div>
        <div class="stat-card">
            <div class="stat-number" id="activeShipments">3</div>
            <div>Aktivne po≈°iljke</div>
        </div>
        <div class="stat-card">
            <div class="stat-number" id="completedShipments">8</div>
            <div>Zavr≈°ene po≈°iljke</div>
        </div>
        <div class="stat-card">
            <div class="stat-number" id="problemShipments">1</div>
            <div>Sa problemima</div>
        </div>
    </div>
    
    <div class="controls">
        <button class="btn btn-primary" onclick="openAddModal()">+ Nova po≈°iljka</button>
        <button class="btn btn-success" onclick="exportToCSV()">üì• Export CSV</button>
        <button class="btn btn-warning" onclick="generateReport()">üìä Izve≈°taj</button>
        
        <input type="text" class="filter-input" id="searchInput" placeholder="Pretra≈æi..." onkeyup="filterTable()">
        
        <select class="filter-input" id="statusFilter" onchange="filterTable()">
            <option value="">Svi statusi</option>
            <option value="nova">Nova</option>
            <option value="u-toku">U toku</option>
            <option value="zavrseno">Zavr≈°eno</option>
            <option value="problem">Problem</option>
        </select>
        
        <select class="filter-input" id="typeFilter" onchange="filterTable()">
            <option value="">Izvoz/Uvoz</option>
            <option value="izvoz">Izvoz</option>
            <option value="uvoz">Uvoz</option>
        </select>
    </div>
    
    <div class="table-container">
        <table id="shipmentsTable">
            <thead>
                <tr>
                    <th>Ref. br.</th>
                    <th>Datum</th>
                    <th>Tip</th>
                    <th>Partner</th>
                    <th>Roba</th>
                    <th>Te≈æina (kg)</th>
                    <th>Vrijednost</th>
                    <th>Status</th>
                    <th>Prioritet</th>
                    <th>Odgovorna osoba</th>
                    <th>Datum utovara</th>
                    <th>Datum dostave</th>
                    <th>Napomene</th>
                    <th>Akcije</th>
                </tr>
            </thead>
            <tbody id="shipmentsBody">
                <tr>
                    <td>EX-2025-001</td>
                    <td>12.06.2025</td>
                    <td>Izvoz</td>
                    <td>ABC Trading Ltd.</td>
                    <td>Ma≈°inski delovi</td>
                    <td>1,250</td>
                    <td>‚Ç¨15,000</td>
                    <td><span class="status-zavrseno">Zavr≈°eno</span></td>
                    <td><span class="priority-normal">Normalan</span></td>
                    <td>Marko Petroviƒá</td>
                    <td>10.06.2025</td>
                    <td>11.06.2025</td>
                    <td>Bez problema</td>
                    <td><button class="btn btn-primary" onclick="editShipment(1)">Uredi</button></td>
                </tr>
                <tr>
                    <td>IM-2025-001</td>
                    <td>11.06.2025</td>
                    <td>Uvoz</td>
                    <td>DEF Solutions</td>
                    <td>Elektronske komponente</td>
                    <td>850</td>
                    <td>‚Ç¨22,500</td>
                    <td><span class="status-u-toku">U toku</span></td>
                    <td><span class="priority-high">Hitno</span></td>
                    <td>Ana Jovanoviƒá</td>
                    <td>13.06.2025</td>
                    <td>15.06.2025</td>
                    <td>ƒåeka se fito sertifikat</td>
                    <td><button class="btn btn-primary" onclick="editShipment(2)">Uredi</button></td>
                </tr>
                <tr>
                    <td>EX-2025-002</td>
                    <td>10.06.2025</td>
                    <td>Izvoz</td>
                    <td>GHI International</td>
                    <td>Tekstil</td>
                    <td>2,100</td>
                    <td>‚Ç¨8,750</td>
                    <td><span class="status-problem">Problem</span></td>
                    <td><span class="priority-high">Hitno</span></td>
                    <td>Stefan Nikoliƒá</td>
                    <td>08.06.2025</td>
                    <td>-</td>
                    <td>Kamion u kvaru</td>
                    <td><button class="btn btn-primary" onclick="editShipment(3)">Uredi</button></td>
                </tr>
                <tr>
                    <td>IM-2025-002</td>
                    <td>09.06.2025</td>
                    <td>Uvoz</td>
                    <td>JKL Corp</td>
                    <td>Sirovine</td>
                    <td>3,400</td>
                    <td>‚Ç¨12,300</td>
                    <td><span class="status-nova">Nova</span></td>
                    <td><span class="priority-medium">Srednji</span></td>
                    <td>Milica Stojanoviƒá</td>
                    <td>14.06.2025</td>
                    <td>16.06.2025</td>
                    <td>Priprema dokumentacije</td>
                    <td><button class="btn btn-primary" onclick="editShipment(4)">Uredi</button></td>
                </tr>
            </tbody>
        </table>
    </div>
    
    <!-- Modal for Add/Edit Shipment -->
    <div id="shipmentModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2 id="modalTitle">Nova po≈°iljka</h2>
            <form id="shipmentForm">
                <div class="form-row">
                    <div class="form-group">
                        <label>Referentni broj:</label>
                        <input type="text" id="refNumber" required>
                    </div>
                    <div class="form-group">
                        <label>Datum:</label>
                        <input type="date" id="date" required>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label>Tip:</label>
                        <select id="type" required>
                            <option value="">Izaberi...</option>
                            <option value="izvoz">Izvoz</option>
                            <option value="uvoz">Uvoz</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Prioritet:</label>
                        <select id="priority" required>
                            <option value="normalan">Normalan</option>
                            <option value="srednji">Srednji</option>
                            <option value="hitno">Hitno</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <label>Partner:</label>
                    <input type="text" id="partner" required>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label>Vrsta robe:</label>
                        <input type="text" id="goods" required>
                    </div>
                    <div class="form-group">
                        <label>Te≈æina (kg):</label>
                        <input type="number" id="weight" required>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label>Vrijednost:</label>
                        <input type="text" id="value" required>
                    </div>
                    <div class="form-group">
                        <label>Status:</label>
                        <select id="status" required>
                            <option value="nova">Nova</option>
                            <option value="u-toku">U toku</option>
                            <option value="zavrseno">Zavr≈°eno</option>
                            <option value="problem">Problem</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label>Odgovorna osoba:</label>
                        <input type="text" id="responsible" required>
                    </div>
                    <div class="form-group">
                        <label>Datum utovara:</label>
                        <input type="date" id="loadDate">
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label>Datum dostave:</label>
                        <input type="date" id="deliveryDate">
                    </div>
                </div>
                
                <div class="form-group">
                    <label>Napomene:</label>
                    <textarea id="notes" rows="3"></textarea>
                </div>
                
                <div style="text-align: right; margin-top: 20px;">
                    <button type="button" class="btn" onclick="closeModal()">Otka≈æi</button>
                    <button type="submit" class="btn btn-primary">Saƒçuvaj</button>
                </div>
            </form>
        </div>
    </div>
    
    <script>
        let shipments = [];
        let editingId = null;
        let nextId = 1;
        
        // Load data from memory on page load
        function loadData() {
            // Initialize with demo data if no data exists
            if (shipments.length === 0) {
                shipments = [
                    {
                        id: 1,
                        refNumber: 'EX-2025-001',
                        date: '2025-06-12',
                        type: 'izvoz',
                        partner: 'ABC Trading Ltd.',
                        goods: 'Ma≈°inski delovi',
                        weight: 1250,
                        value: '‚Ç¨15,000',
                        status: 'zavrseno',
                        priority: 'normalan',
                        responsible: 'Marko Petroviƒá',
                        loadDate: '2025-06-10',
                        deliveryDate: '2025-06-11',
                        notes: 'Bez problema'
                    },
                    {
                        id: 2,
                        refNumber: 'IM-2025-001',
                        date: '2025-06-11',
                        type: 'uvoz',
                        partner: 'DEF Solutions',
                        goods: 'Elektronske komponente',
                        weight: 850,
                        value: '‚Ç¨22,500',
                        status: 'u-toku',
                        priority: 'hitno',
                        responsible: 'Ana Jovanoviƒá',
                        loadDate: '2025-06-13',
                        deliveryDate: '2025-06-15',
                        notes: 'ƒåeka se fito sertifikat'
                    },
                    {
                        id: 3,
                        refNumber: 'EX-2025-002',
                        date: '2025-06-10',
                        type: 'izvoz',
                        partner: 'GHI International',
                        goods: 'Tekstil',
                        weight: 2100,
                        value: '‚Ç¨8,750',
                        status: 'problem',
                        priority: 'hitno',
                        responsible: 'Stefan Nikoliƒá',
                        loadDate: '2025-06-08',
                        deliveryDate: '',
                        notes: 'Kamion u kvaru'
                    },
                    {
                        id: 4,
                        refNumber: 'IM-2025-002',
                        date: '2025-06-09',
                        type: 'uvoz',
                        partner: 'JKL Corp',
                        goods: 'Sirovine',
                        weight: 3400,
                        value: '‚Ç¨12,300',
                        status: 'nova',
                        priority: 'srednji',
                        responsible: 'Milica Stojanoviƒá',
                        loadDate: '2025-06-14',
                        deliveryDate: '2025-06-16',
                        notes: 'Priprema dokumentacije'
                    }
                ];
                nextId = 5;
            }
            renderTable();
            updateStats();
        }
        
        function renderTable() {
            const tbody = document.getElementById('shipmentsBody');
            tbody.innerHTML = '';
            
            shipments.forEach(shipment => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${shipment.refNumber}</td>
                    <td>${formatDate(shipment.date)}</td>
                    <td>${shipment.type === 'izvoz' ? 'Izvoz' : 'Uvoz'}</td>
                    <td>${shipment.partner}</td>
                    <td>${shipment.goods}</td>
                    <td>${shipment.weight.toLocaleString()}</td>
                    <td>${shipment.value}</td>
                    <td><span class="status-${shipment.status}">${getStatusText(shipment.status)}</span></td>
                    <td><span class="priority-${getPriorityClass(shipment.priority)}">${getPriorityText(shipment.priority)}</span></td>
                    <td>${shipment.responsible}</td>
                    <td>${shipment.loadDate ? formatDate(shipment.loadDate) : '-'}</td>
                    <td>${shipment.deliveryDate ? formatDate(shipment.deliveryDate) : '-'}</td>
                    <td>${shipment.notes}</td>
                    <td>
                        <button class="btn btn-primary" onclick="editShipment(${shipment.id})" style="margin-right: 5px;">Uredi</button>
                        <button class="btn" onclick="deleteShipment(${shipment.id})" style="background-color: #e74c3c; color: white;">Obri≈°i</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }
        
        function formatDate(dateStr) {
            if (!dateStr) return '-';
            const date = new Date(dateStr);
            return date.toLocaleDateString('sr-RS');
        }
        
        function getStatusText(status) {
            const statusMap = {
                'nova': 'Nova',
                'u-toku': 'U toku',
                'zavrseno': 'Zavr≈°eno',
                'problem': 'Problem'
            };
            return statusMap[status] || status;
        }
        
        function getPriorityText(priority) {
            const priorityMap = {
                'normalan': 'Normalan',
                'srednji': 'Srednji',
                'hitno': 'Hitno',
                'kriticno': 'Kritiƒçno'
            };
            return priorityMap[priority] || priority;
        }
        
        function getPriorityClass(priority) {
            if (priority === 'hitno' || priority === 'kriticno') return 'high';
            if (priority === 'srednji') return 'medium';
            return 'normal';
        }
        
        function generateRefNumber(type) {
            const prefix = type === 'izvoz' ? 'EX' : 'IM';
            const year = new Date().getFullYear();
            const existingNumbers = shipments
                .filter(s => s.refNumber.startsWith(`${prefix}-${year}`))
                .map(s => parseInt(s.refNumber.split('-')[2]))
                .filter(n => !isNaN(n));
            
            const nextNumber = existingNumbers.length > 0 ? Math.max(...existingNumbers) + 1 : 1;
            return `${prefix}-${year}-${nextNumber.toString().padStart(3, '0')}`;
        }
        
        function openAddModal() {
            document.getElementById('modalTitle').textContent = 'Nova po≈°iljka';
            document.getElementById('shipmentForm').reset();
            editingId = null;
            // Set today's date as default
            document.getElementById('date').value = new Date().toISOString().split('T')[0];
            document.getElementById('shipmentModal').style.display = 'block';
        }
        
        function editShipment(id) {
            const shipment = shipments.find(s => s.id === id);
            if (!shipment) return;
            
            document.getElementById('modalTitle').textContent = 'Uredi po≈°iljku';
            editingId = id;
            
            // Populate form with existing data
            document.getElementById('refNumber').value = shipment.refNumber;
            document.getElementById('date').value = shipment.date;
            document.getElementById('type').value = shipment.type;
            document.getElementById('priority').value = shipment.priority;
            document.getElementById('partner').value = shipment.partner;
            document.getElementById('goods').value = shipment.goods;
            document.getElementById('weight').value = shipment.weight;
            document.getElementById('value').value = shipment.value;
            document.getElementById('status').value = shipment.status;
            document.getElementById('responsible').value = shipment.responsible;
            document.getElementById('loadDate').value = shipment.loadDate;
            document.getElementById('deliveryDate').value = shipment.deliveryDate;
            document.getElementById('notes').value = shipment.notes;
            
            document.getElementById('shipmentModal').style.display = 'block';
        }
        
        function deleteShipment(id) {
            if (confirm('Da li ste sigurni da ≈æelite da obri≈°ete ovu po≈°iljku?')) {
                shipments = shipments.filter(s => s.id !== id);
                renderTable();
                updateStats();
            }
        }
        
        function closeModal() {
            document.getElementById('shipmentModal').style.display = 'none';
        }
        
        function filterTable() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            const rows = document.querySelectorAll('#shipmentsBody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const statusCell = row.cells[7];
                const typeCell = row.cells[2];
                
                const matchesSearch = text.includes(searchTerm);
                const matchesStatus = !statusFilter || statusCell.textContent.toLowerCase().includes(statusFilter.replace('-', ' '));
                const matchesType = !typeFilter || typeCell.textContent.toLowerCase().includes(typeFilter);
                
                row.style.display = matchesSearch && matchesStatus && matchesType ? '' : 'none';
            });
        }
        
        function exportToCSV() {
            let csvContent = "Ref. broj,Datum,Tip,Partner,Roba,Te≈æina,Vrijednost,Status,Prioritet,Odgovorna osoba,Datum utovara,Datum dostave,Napomene\n";
            
            shipments.forEach(shipment => {
                const row = [
                    shipment.refNumber,
                    shipment.date,
                    shipment.type === 'izvoz' ? 'Izvoz' : 'Uvoz',
                    shipment.partner,
                    shipment.goods,
                    shipment.weight,
                    shipment.value,
                    getStatusText(shipment.status),
                    getPriorityText(shipment.priority),
                    shipment.responsible,
                    shipment.loadDate || '',
                    shipment.deliveryDate || '',
                    shipment.notes || ''
                ].map(field => `"${field}"`).join(',');
                
                csvContent += row + '\n';
            });
            
            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `izvoz-uvoz-${new Date().toISOString().split('T')[0]}.csv`;
            link.click();
        }
        
        function generateReport() {
            const total = shipments.length;
            const byStatus = {};
            const byType = {};
            const byPriority = {};
            
            shipments.forEach(shipment => {
                // Count by status
                const status = getStatusText(shipment.status);
                byStatus[status] = (byStatus[status] || 0) + 1;
                
                // Count by type
                const type = shipment.type === 'izvoz' ? 'Izvoz' : 'Uvoz';
                byType[type] = (byType[type] || 0) + 1;
                
                // Count by priority
                const priority = getPriorityText(shipment.priority);
                byPriority[priority] = (byPriority[priority] || 0) + 1;
            });
            
            let report = `IZVE≈†TAJ PO≈†ILJKI - ${new Date().toLocaleDateString('sr-RS')}\n\n`;
            report += `Ukupno po≈°iljki: ${total}\n\n`;
            report += `Po statusu:\n${Object.entries(byStatus).map(([k,v]) => `- ${k}: ${v}`).join('\n')}\n\n`;
            report += `Po tipu:\n${Object.entries(byType).map(([k,v]) => `- ${k}: ${v}`).join('\n')}\n\n`;
            report += `Po prioritetu:\n${Object.entries(byPriority).map(([k,v]) => `- ${k}: ${v}`).join('\n')}`;
            
            alert(report);
        }
        
        // Form submission
        document.getElementById('shipmentForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = {
                refNumber: document.getElementById('refNumber').value || generateRefNumber(document.getElementById('type').value),
                date: document.getElementById('date').value,
                type: document.getElementById('type').value,
                priority: document.getElementById('priority').value,
                partner: document.getElementById('partner').value,
                goods: document.getElementById('goods').value,
                weight: parseFloat(document.getElementById('weight').value),
                value: document.getElementById('value').value,
                status: document.getElementById('status').value,
                responsible: document.getElementById('responsible').value,
                loadDate: document.getElementById('loadDate').value,
                deliveryDate: document.getElementById('deliveryDate').value,
                notes: document.getElementById('notes').value
            };
            
            if (editingId) {
                // Update existing shipment
                const index = shipments.findIndex(s => s.id === editingId);
                if (index !== -1) {
                    shipments[index] = { ...shipments[index], ...formData };
                }
            } else {
                // Add new shipment
                formData.id = nextId++;
                shipments.push(formData);
            }
            
            renderTable();
            updateStats();
            closeModal();
        });
        
        // Auto-generate reference number when type changes
        document.getElementById('type').addEventListener('change', function() {
            if (!editingId && this.value) {
                document.getElementById('refNumber').value = generateRefNumber(this.value);
            }
        });
        
        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('shipmentModal');
            if (event.target == modal) {
                closeModal();
            }
        }
        
        // Update statistics
        function updateStats() {
            const total = shipments.length;
            let active = 0;
            let completed = 0;
            let problems = 0;
            
            shipments.forEach(shipment => {
                switch(shipment.status) {
                    case 'nova':
                    case 'u-toku':
                        active++;
                        break;
                    case 'zavrseno':
                        completed++;
                        break;
                    case 'problem':
                        problems++;
                        break;
                }
            });
            
            document.getElementById('totalShipments').textContent = total;
            document.getElementById('activeShipments').textContent = active;
            document.getElementById('completedShipments').textContent = completed;
            document.getElementById('problemShipments').textContent = problems;
        }
        
        // Initialize on page load
        window.addEventListener('load', loadData);
    </script>
</body>
</html>
